{"ast":null,"code":"import _extends from \"F:\\\\Boot\\\\Project3\\\\Doc-Docs\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/extends\";\nimport _classCallCheck from \"F:\\\\Boot\\\\Project3\\\\Doc-Docs\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\Boot\\\\Project3\\\\Doc-Docs\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\Boot\\\\Project3\\\\Doc-Docs\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\Boot\\\\Project3\\\\Doc-Docs\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Boot\\\\Project3\\\\Doc-Docs\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\Boot\\\\Project3\\\\Doc-Docs\\\\client\\\\src\\\\components\\\\Scheduler\\\\index.js\";\n// import React, { Component } from 'react';\n// import { DayPilot, DayPilotScheduler } from \"daypilot-pro-react\";\n// import Zoom from \"../DayPilot\";\n// // let schedulerData = new SchedulerData(new moment().format(DATE_FORMAT), ViewTypes.Week);\n// class Scheduler extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             // startDate: \"2018-05-01\",\n//             startDate: DayPilot.Date.today().firstDayOfMonth(),\n//             days: 31,\n//             scale: \"Day\",\n//             eventHeight: 30,\n//             cellWidth: 50,\n//             timeHeaders: [\n//                 { groupBy: \"Month\" },\n//                 { groupBy: \"Day\", format: \"d\" }\n//             ],\n//             //shell width\n//             cellWidthSpec: \"50\",\n//             //display timing \n//             resources: [\n//                 { name: \"9:00 AM\", id: \"A\" },\n//                 { name: \"10:00 AM\", id: \"B\" },\n//                 { name: \"11:00 AM\", id: \"C\" },\n//                 { name: \"12:00 PM\", id: \"D\" },\n//                 { name: \"1:00 PM\", id: \"E\" },\n//                 { name: \"2:00 PM\", id: \"F\" },\n//                 { name: \"3:00 PM\", id: \"G\" },\n//                 { name: \"4:00 PM\", id: \"H\" },\n//                 { name: \"5:00 PM\", id: \"I\" },\n//                 { name: \"6:00 PM\", id: \"J\" }\n//             ],\n//             //day appoinment\n//             events: [\n//                 { id: 1, text: \"Bob\", start: \"2019-03-02T00:00:00\", end: \"2019-03-02T00:00:00\", resource: \"A\" },\n//                 { id: 2, text: \"Sara\", start: \"2019-03-03T00:00:00\", end: \"2019-03-03T00:00:00\", resource: \"C\", barColor: \"#38761d\", barBackColor: \"#93c47d\", backColor: \"#cc0000\" , color: \"white\"},\n//                 { id: 3, text: \"Mark\", start: \"2019-03-02T00:00:00\", end: \"2019-03-02T00:00:00\", resource: \"D\", barColor: \"#f1c232\", barBackColor: \"#f1c232\" ,backColor: \"#e69138\"},\n//                 { id: 3, text: \"Dylan\", start: \"2019-03-04T00:00:00\", end: \"2019-03-04T00:00:00\", resource: \"E\", barColor: \"#cc0000\", barBackColor: \"#ea9999\", backColor: \"#3c78d8\" },\n//                 { id: 4, text: \"Bob\", start: \"2019-03-02T00:00:00\", end: \"2019-03-02T00:00:00\", resource: \"F\" },\n//                 { id: 5, text: \"Sara\", start: \"2019-03-03T00:00:00\", end: \"2019-03-03T00:00:00\", resource: \"G\", barColor: \"#38761d\", barBackColor: \"#93c47d\", backColor: \"#cc0000\" },\n//                 { id: 6, text: \"Mark\", start: \"2019-03-04T00:00:00\", end: \"2019-03-04T00:00:00\", resource: \"H\", barColor: \"#f1c232\", barBackColor: \"#f1c232\" , backColor: \"#e69138\"},\n//                 { id: 7, text: \"Dylan\", start: \"2019-03-05T00:00:00\", end: \"2019-03-05T00:00:00\", resource: \"I\", barColor: \"#cc0000\", barBackColor: \"#ea9999\",backColor: \"#6aa84f\" }\n//             ]\n//         };\n//     }\n//     zoomChange(args) {\n//         switch (args.level) {\n//             case \"month\":\n//                 this.setState({\n//                     startDate: DayPilot.Date.today().firstDayOfMonth(),\n//                     days: DayPilot.Date.today().daysInMonth(),\n//                     scale: \"Day\"\n//                 });\n//                 break;\n//             case \"week\":\n//                 this.setState({\n//                     startDate: DayPilot.Date.today().firstDayOfWeek(),\n//                     days: 7,\n//                     scale: \"Day\"\n//                 });\n//                 break;\n//             default:\n//                 throw new Error(\"Invalid zoom level\");\n//         }\n//     }\n//     render() {\n//         var { ...config } = this.state;\n//         return (\n//             <div>\n//                 <Zoom onChange={args => this.zoomChange(args)} />\n//                 <DayPilotScheduler\n//                     // schedulerData={schedulerData}\n//                     {...config}\n//                     // onEventMoved={args => {\n//                     //     console.log(\"Event moved: \", args.e.data.id, args.newStart, args.newEnd, args.newResource);\n//                     //     this.scheduler.message(\"Event moved: \" + args.e.data.text);\n//                     // }}\n//                     // ref={component => { this.scheduler = component && component.control; }}\n//                 />\n//             </div>\n//         );\n//     }\n// }\n// export default Scheduler;\nimport React, { Component } from 'react';\nimport { DayPilot, DayPilotMonth } from \"daypilot-pro-react\"; // import \"./MonthStyles.css\";\n// import \"./icons/style.css\";\n\nvar Month =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Month, _Component);\n\n  function Month(props) {\n    var _this;\n\n    _classCallCheck(this, Month);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Month).call(this, props));\n    _this.state = {\n      eventHeight: 30,\n      headerHeight: 30,\n      cellMarginBottom: 10,\n      cellHeaderHeight: 20,\n      eventMarginBottom: 5,\n      eventEndSpec: \"Date\",\n      onBeforeEventRender: function onBeforeEventRender(args) {\n        args.data.areas = [{\n          top: 6,\n          right: 10,\n          width: 12,\n          height: 14,\n          icon: \"icon-triangle-down\",\n          visibility: \"Visible\",\n          action: \"ContextMenu\",\n          style: \"font-size: 12px; background-color: #fff; border: 1px solid #ccc; border-radius: 5px; padding: 3px 3px 0px 2px; cursor:pointer;\"\n        }];\n      },\n      contextMenu: new DayPilot.Menu({\n        items: [{\n          text: \"Delete\",\n          onClick: function onClick(args) {\n            var e = args.source;\n\n            _this.calendar.events.remove(e);\n          }\n        }, {\n          text: \"-\"\n        }, {\n          text: \"Blue\",\n          icon: \"icon icon-blue\",\n          color: \"#3c78d8\",\n          onClick: function onClick(args) {\n            return _this.updateColor(args.source, args.item.color);\n          }\n        }, {\n          text: \"Green\",\n          icon: \"icon icon-green\",\n          color: \"#6aa84f\",\n          onClick: function onClick(args) {\n            return _this.updateColor(args.source, args.item.color);\n          }\n        }, {\n          text: \"Yellow\",\n          icon: \"icon icon-yellow\",\n          color: \"#e69138\",\n          onClick: function onClick(args) {\n            return _this.updateColor(args.source, args.item.color);\n          }\n        }, {\n          text: \"Red\",\n          icon: \"icon icon-red\",\n          color: \"#cc0000\",\n          onClick: function onClick(args) {\n            return _this.updateColor(args.source, args.item.color);\n          }\n        }, {\n          text: \"Auto\",\n          color: \"auto\",\n          onClick: function onClick(args) {\n            return _this.updateColor(args.source, args.item.color);\n          }\n        }]\n      }),\n      onTimeRangeSelected: function onTimeRangeSelected(args) {\n        var dp = _this.calendar;\n        DayPilot.Modal.prompt(\"Create a new event:\", \"Event 1\").then(function (modal) {\n          dp.clearSelection();\n\n          if (!modal.result) {\n            return;\n          }\n\n          dp.events.add(new DayPilot.Event({\n            start: args.start,\n            end: args.end,\n            id: DayPilot.guid(),\n            text: modal.result\n          }));\n        });\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Month, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var first = DayPilot.Date.today().firstDayOfMonth(); // load resource and event data\n\n      this.setState({\n        startDate: DayPilot.Date.today(),\n        events: [{\n          id: 1,\n          text: \"Event 1\",\n          start: first.addDays(3),\n          end: first.addDays(5),\n          backColor: \"#cc0000\"\n        }, {\n          id: 2,\n          text: \"Event 2\",\n          start: first.addDays(3),\n          end: first.addDays(4),\n          backColor: \"#e69138\"\n        }, {\n          id: 3,\n          text: \"Event 3\",\n          start: first.addDays(3),\n          end: first.addDays(3),\n          backColor: \"#6aa84f\"\n        }, {\n          id: 4,\n          text: \"Event 4\",\n          start: first.addDays(10),\n          end: first.addDays(10),\n          backColor: \"#3c78d8\"\n        }, {\n          id: 5,\n          text: \"Event 5\",\n          start: first.addDays(10),\n          end: first.addDays(10)\n        }]\n      });\n    }\n  }, {\n    key: \"updateColor\",\n    value: function updateColor(e, color) {\n      e.data.backColor = color;\n      this.calendar.events.update(e);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var config = _extends({}, this.state);\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(DayPilotMonth, Object.assign({}, config, {\n        ref: function ref(component) {\n          _this2.calendar = component && component.control;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Month;\n}(Component);\n\nexport default Month;","map":{"version":3,"sources":["F:\\Boot\\Project3\\Doc-Docs\\client\\src\\components\\Scheduler\\index.js"],"names":["React","Component","DayPilot","DayPilotMonth","Month","props","state","eventHeight","headerHeight","cellMarginBottom","cellHeaderHeight","eventMarginBottom","eventEndSpec","onBeforeEventRender","args","data","areas","top","right","width","height","icon","visibility","action","style","contextMenu","Menu","items","text","onClick","e","source","calendar","events","remove","color","updateColor","item","onTimeRangeSelected","dp","Modal","prompt","then","modal","clearSelection","result","add","Event","start","end","id","guid","first","Date","today","firstDayOfMonth","setState","startDate","addDays","backColor","update","config","component","control"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react';\r\n// import { DayPilot, DayPilotScheduler } from \"daypilot-pro-react\";\r\n// import Zoom from \"../DayPilot\";\r\n\r\n// // let schedulerData = new SchedulerData(new moment().format(DATE_FORMAT), ViewTypes.Week);\r\n\r\n// class Scheduler extends Component {\r\n\r\n//     constructor(props) {\r\n//         super(props);\r\n\r\n//         this.state = {\r\n//             // startDate: \"2018-05-01\",\r\n//             startDate: DayPilot.Date.today().firstDayOfMonth(),\r\n//             days: 31,\r\n//             scale: \"Day\",\r\n//             eventHeight: 30,\r\n//             cellWidth: 50,\r\n//             timeHeaders: [\r\n//                 { groupBy: \"Month\" },\r\n//                 { groupBy: \"Day\", format: \"d\" }\r\n//             ],\r\n//             //shell width\r\n//             cellWidthSpec: \"50\",\r\n//             //display timing \r\n//             resources: [\r\n//                 { name: \"9:00 AM\", id: \"A\" },\r\n//                 { name: \"10:00 AM\", id: \"B\" },\r\n//                 { name: \"11:00 AM\", id: \"C\" },\r\n//                 { name: \"12:00 PM\", id: \"D\" },\r\n//                 { name: \"1:00 PM\", id: \"E\" },\r\n//                 { name: \"2:00 PM\", id: \"F\" },\r\n//                 { name: \"3:00 PM\", id: \"G\" },\r\n//                 { name: \"4:00 PM\", id: \"H\" },\r\n//                 { name: \"5:00 PM\", id: \"I\" },\r\n//                 { name: \"6:00 PM\", id: \"J\" }\r\n//             ],\r\n//             //day appoinment\r\n//             events: [\r\n//                 { id: 1, text: \"Bob\", start: \"2019-03-02T00:00:00\", end: \"2019-03-02T00:00:00\", resource: \"A\" },\r\n//                 { id: 2, text: \"Sara\", start: \"2019-03-03T00:00:00\", end: \"2019-03-03T00:00:00\", resource: \"C\", barColor: \"#38761d\", barBackColor: \"#93c47d\", backColor: \"#cc0000\" , color: \"white\"},\r\n//                 { id: 3, text: \"Mark\", start: \"2019-03-02T00:00:00\", end: \"2019-03-02T00:00:00\", resource: \"D\", barColor: \"#f1c232\", barBackColor: \"#f1c232\" ,backColor: \"#e69138\"},\r\n//                 { id: 3, text: \"Dylan\", start: \"2019-03-04T00:00:00\", end: \"2019-03-04T00:00:00\", resource: \"E\", barColor: \"#cc0000\", barBackColor: \"#ea9999\", backColor: \"#3c78d8\" },\r\n//                 { id: 4, text: \"Bob\", start: \"2019-03-02T00:00:00\", end: \"2019-03-02T00:00:00\", resource: \"F\" },\r\n//                 { id: 5, text: \"Sara\", start: \"2019-03-03T00:00:00\", end: \"2019-03-03T00:00:00\", resource: \"G\", barColor: \"#38761d\", barBackColor: \"#93c47d\", backColor: \"#cc0000\" },\r\n//                 { id: 6, text: \"Mark\", start: \"2019-03-04T00:00:00\", end: \"2019-03-04T00:00:00\", resource: \"H\", barColor: \"#f1c232\", barBackColor: \"#f1c232\" , backColor: \"#e69138\"},\r\n//                 { id: 7, text: \"Dylan\", start: \"2019-03-05T00:00:00\", end: \"2019-03-05T00:00:00\", resource: \"I\", barColor: \"#cc0000\", barBackColor: \"#ea9999\",backColor: \"#6aa84f\" }\r\n//             ]\r\n//         };\r\n\r\n\r\n//     }\r\n//     zoomChange(args) {\r\n//         switch (args.level) {\r\n//             case \"month\":\r\n//                 this.setState({\r\n//                     startDate: DayPilot.Date.today().firstDayOfMonth(),\r\n//                     days: DayPilot.Date.today().daysInMonth(),\r\n//                     scale: \"Day\"\r\n//                 });\r\n//                 break;\r\n//             case \"week\":\r\n//                 this.setState({\r\n//                     startDate: DayPilot.Date.today().firstDayOfWeek(),\r\n//                     days: 7,\r\n//                     scale: \"Day\"\r\n//                 });\r\n//                 break;\r\n            \r\n//             default:\r\n//                 throw new Error(\"Invalid zoom level\");\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n//         var { ...config } = this.state;\r\n\r\n//         return (\r\n//             <div>\r\n//                 <Zoom onChange={args => this.zoomChange(args)} />\r\n//                 <DayPilotScheduler\r\n//                     // schedulerData={schedulerData}\r\n//                     {...config}\r\n//                     // onEventMoved={args => {\r\n//                     //     console.log(\"Event moved: \", args.e.data.id, args.newStart, args.newEnd, args.newResource);\r\n//                     //     this.scheduler.message(\"Event moved: \" + args.e.data.text);\r\n//                     // }}\r\n//                     // ref={component => { this.scheduler = component && component.control; }}\r\n//                 />\r\n\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Scheduler;\r\n\r\nimport React, {Component} from 'react';\r\nimport {DayPilot, DayPilotMonth} from \"daypilot-pro-react\";\r\n// import \"./MonthStyles.css\";\r\n// import \"./icons/style.css\";\r\n\r\nclass Month extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      eventHeight: 30,\r\n      headerHeight: 30,\r\n      cellMarginBottom: 10,\r\n      cellHeaderHeight: 20,\r\n      eventMarginBottom: 5,\r\n      eventEndSpec: \"Date\",\r\n      onBeforeEventRender: args => {\r\n        args.data.areas = [\r\n          { top: 6, right: 10, width: 12, height: 14, icon: \"icon-triangle-down\", visibility: \"Visible\", action: \"ContextMenu\", style: \"font-size: 12px; background-color: #fff; border: 1px solid #ccc; border-radius: 5px; padding: 3px 3px 0px 2px; cursor:pointer;\"}\r\n        ];\r\n      },\r\n      contextMenu: new DayPilot.Menu({\r\n        items: [\r\n          {\r\n            text: \"Delete\",\r\n            onClick: args => {\r\n              var e = args.source;\r\n              this.calendar.events.remove(e);\r\n            }\r\n          },\r\n          {\r\n            text: \"-\"\r\n          },\r\n          {\r\n            text: \"Blue\",\r\n            icon: \"icon icon-blue\",\r\n            color: \"#3c78d8\",\r\n            onClick: args => this.updateColor(args.source, args.item.color)\r\n          },\r\n          {\r\n            text: \"Green\",\r\n            icon: \"icon icon-green\",\r\n            color: \"#6aa84f\",\r\n            onClick: args => this.updateColor(args.source, args.item.color)\r\n          },\r\n          {\r\n            text: \"Yellow\",\r\n            icon: \"icon icon-yellow\",\r\n            color: \"#e69138\",\r\n            onClick: args => this.updateColor(args.source, args.item.color)\r\n          },\r\n          {\r\n            text: \"Red\",\r\n            icon: \"icon icon-red\",\r\n            color: \"#cc0000\",\r\n            onClick: args => this.updateColor(args.source, args.item.color)\r\n          },            {\r\n            text: \"Auto\",\r\n            color: \"auto\",\r\n            onClick: args => this.updateColor(args.source, args.item.color)\r\n          },\r\n\r\n        ]\r\n      }),\r\n      onTimeRangeSelected: args => {\r\n        let dp = this.calendar;\r\n        DayPilot.Modal.prompt(\"Create a new event:\", \"Event 1\").then(function (modal) {\r\n          dp.clearSelection();\r\n          if (!modal.result) {\r\n            return;\r\n          }\r\n          dp.events.add(new DayPilot.Event({\r\n            start: args.start,\r\n            end: args.end,\r\n            id: DayPilot.guid(),\r\n            text: modal.result\r\n          }));\r\n        });\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    let first = DayPilot.Date.today().firstDayOfMonth();\r\n\r\n    // load resource and event data\r\n    this.setState({\r\n      startDate: DayPilot.Date.today(),\r\n      events: [\r\n        {\r\n          id: 1,\r\n          text: \"Event 1\",\r\n          start: first.addDays(3),\r\n          end: first.addDays(5),\r\n          backColor: \"#cc0000\"\r\n        },\r\n        {\r\n          id: 2,\r\n          text: \"Event 2\",\r\n          start: first.addDays(3),\r\n          end: first.addDays(4),\r\n          backColor: \"#e69138\",\r\n        },\r\n        {\r\n          id: 3,\r\n          text: \"Event 3\",\r\n          start: first.addDays(3),\r\n          end: first.addDays(3),\r\n          backColor: \"#6aa84f\"\r\n        },\r\n        {\r\n          id: 4,\r\n          text: \"Event 4\",\r\n          start: first.addDays(10),\r\n          end: first.addDays(10),\r\n          backColor: \"#3c78d8\"\r\n        },\r\n        {\r\n          id: 5,\r\n          text: \"Event 5\",\r\n          start: first.addDays(10),\r\n          end: first.addDays(10)\r\n        },\r\n      ]\r\n    });\r\n\r\n  }\r\n\r\n  updateColor(e, color) {\r\n    e.data.backColor = color;\r\n    this.calendar.events.update(e);\r\n  }\r\n\r\n  render() {\r\n    var {...config} = this.state;\r\n    return (\r\n      <div>\r\n        <DayPilotMonth\r\n          {...config}\r\n          ref={component => {\r\n            this.calendar = component && component.control;\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Month;"]},"metadata":{},"sourceType":"module"}