{"ast":null,"code":"import _objectSpread from \"f:\\\\Boot\\\\Project3\\\\Doc-Docs\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"f:\\\\Boot\\\\Project3\\\\Doc-Docs\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"f:\\\\Boot\\\\Project3\\\\Doc-Docs\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"f:\\\\Boot\\\\Project3\\\\Doc-Docs\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"f:\\\\Boot\\\\Project3\\\\Doc-Docs\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"f:\\\\Boot\\\\Project3\\\\Doc-Docs\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"f:\\\\Boot\\\\Project3\\\\Doc-Docs\\\\client\\\\src\\\\pages\\\\Scheduler.js\";\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport Scheduler, { SchedulerData, ViewTypes, AddMorePopover, DemoData } from '../src/index';\nimport Nav from './Nav';\nimport ViewSrcCode from './ViewSrcCode';\nimport withDragDropContext from './withDnDContext';\n\nvar AddMore =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddMore, _Component);\n\n  function AddMore(props) {\n    var _this;\n\n    _classCallCheck(this, AddMore);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddMore).call(this, props));\n\n    _this.prevClick = function (schedulerData) {\n      schedulerData.prev();\n      schedulerData.setEvents(DemoData.events);\n\n      _this.setState({\n        viewModel: schedulerData\n      });\n    };\n\n    _this.nextClick = function (schedulerData) {\n      schedulerData.next();\n      schedulerData.setEvents(DemoData.events);\n\n      _this.setState({\n        viewModel: schedulerData\n      });\n    };\n\n    _this.onViewChange = function (schedulerData, view) {\n      schedulerData.setViewType(view.viewType, view.showAgenda, view.isEventPerspective);\n      schedulerData.setEvents(DemoData.events);\n\n      _this.setState({\n        viewModel: schedulerData\n      });\n    };\n\n    _this.onSelectDate = function (schedulerData, date) {\n      schedulerData.setDate(date);\n      schedulerData.setEvents(DemoData.events);\n\n      _this.setState({\n        viewModel: schedulerData\n      });\n    };\n\n    _this.eventClicked = function (schedulerData, event) {\n      alert(\"You just clicked an event: {id: \".concat(event.id, \", title: \").concat(event.title, \"}\"));\n    };\n\n    _this.ops1 = function (schedulerData, event) {\n      alert(\"You just executed ops1 to event: {id: \".concat(event.id, \", title: \").concat(event.title, \"}\"));\n    };\n\n    _this.ops2 = function (schedulerData, event) {\n      alert(\"You just executed ops2 to event: {id: \".concat(event.id, \", title: \").concat(event.title, \"}\"));\n    };\n\n    _this.newEvent = function (schedulerData, slotId, slotName, start, end, type, item) {// if(confirm(`Do you want to create a new event? {slotId: ${slotId}, slotName: ${slotName}, start: ${start}, end: ${end}, type: ${type}, item: ${item}}`)){\n      //     let newFreshId = 0;\n      //     schedulerData.events.forEach((item) => {\n      //         if(item.id >= newFreshId)\n      //             newFreshId = item.id + 1;\n      //     });\n      //     let newEvent = {\n      //         id: newFreshId,\n      //         title: 'New event you just created',\n      //         start: start,\n      //         end: end,\n      //         resourceId: slotId,\n      //         bgColor: 'purple'\n      //     }\n      //     schedulerData.addEvent(newEvent);\n      //     this.setState({\n      //         viewModel: schedulerData\n      //     })\n      // }\n    };\n\n    _this.updateEventStart = function (schedulerData, event, newStart) {// if(confirm(`Do you want to adjust the start of the event? {eventId: ${event.id}, eventTitle: ${event.title}, newStart: ${newStart}}`)) {\n      //     schedulerData.updateEventStart(event, newStart);\n      // }\n      // this.setState({\n      //     viewModel: schedulerData\n      // })\n    };\n\n    _this.updateEventEnd = function (schedulerData, event, newEnd) {// if(confirm(`Do you want to adjust the end of the event? {eventId: ${event.id}, eventTitle: ${event.title}, newEnd: ${newEnd}}`)) {\n      //     schedulerData.updateEventEnd(event, newEnd);\n      // }\n      // this.setState({\n      //     viewModel: schedulerData\n      // })\n    };\n\n    _this.moveEvent = function (schedulerData, event, slotId, slotName, start, end) {// if(confirm(`Do you want to move the event? {eventId: ${event.id}, eventTitle: ${event.title}, newSlotId: ${slotId}, newSlotName: ${slotName}, newStart: ${start}, newEnd: ${end}`)) {\n      //     schedulerData.moveEvent(event, slotId, slotName, start, end);\n      //     this.setState({\n      //         viewModel: schedulerData\n      //     })\n      // }\n    };\n\n    _this.onSetAddMoreState = function (newState) {\n      if (newState === undefined) {\n        _this.setState({\n          headerItem: undefined,\n          left: 0,\n          top: 0,\n          height: 0\n        });\n      } else {\n        _this.setState(_objectSpread({}, newState));\n      }\n    };\n\n    var _schedulerData = new SchedulerData('2017-12-18', ViewTypes.Week, false, false, {\n      dayMaxEvents: 2,\n      weekMaxEvents: 4,\n      monthMaxEvents: 4,\n      quarterMaxEvents: 4,\n      yearMaxEvents: 4\n    });\n\n    _schedulerData.localeMoment.locale('en');\n\n    _schedulerData.setResources(DemoData.resources);\n\n    _schedulerData.setEvents(DemoData.events);\n\n    _this.state = {\n      viewModel: _schedulerData,\n      headerItem: undefined,\n      left: 0,\n      top: 0,\n      height: 0\n    };\n    return _this;\n  }\n\n  _createClass(AddMore, [{\n    key: \"render\",\n    value: function render() {\n      var viewModel = this.state.viewModel;\n      var popover = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n\n      if (this.state.headerItem !== undefined) {\n        popover = React.createElement(AddMorePopover, {\n          headerItem: this.state.headerItem,\n          eventItemClick: this.eventClicked,\n          viewEventClick: this.ops1,\n          viewEventText: \"Ops 1\",\n          viewEvent2Click: this.ops2,\n          viewEvent2Text: \"Ops 2\",\n          schedulerData: viewModel,\n          closeAction: this.onSetAddMoreState,\n          left: this.state.left,\n          top: this.state.top,\n          height: this.state.height,\n          moveEvent: this.moveEvent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Add more\", React.createElement(ViewSrcCode, {\n        srcCodeUrl: \"https://github.com/StephenChou1017/react-big-scheduler/blob/master/example/AddMore.js\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(Scheduler, {\n        schedulerData: viewModel,\n        prevClick: this.prevClick,\n        nextClick: this.nextClick,\n        onSelectDate: this.onSelectDate,\n        onViewChange: this.onViewChange,\n        eventItemClick: this.eventClicked,\n        viewEventClick: this.ops1,\n        viewEventText: \"Ops 1\",\n        viewEvent2Text: \"Ops 2\",\n        viewEvent2Click: this.ops2,\n        updateEventStart: this.updateEventStart,\n        updateEventEnd: this.updateEventEnd,\n        moveEvent: this.moveEvent,\n        newEvent: this.newEvent,\n        onSetAddMoreState: this.onSetAddMoreState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), popover));\n    }\n  }]);\n\n  return AddMore;\n}(Component);\n\nexport default withDragDropContext(AddMore);","map":{"version":3,"sources":["f:\\Boot\\Project3\\Doc-Docs\\client\\src\\pages\\Scheduler.js"],"names":["React","Component","PropTypes","Scheduler","SchedulerData","ViewTypes","AddMorePopover","DemoData","Nav","ViewSrcCode","withDragDropContext","AddMore","props","prevClick","schedulerData","prev","setEvents","events","setState","viewModel","nextClick","next","onViewChange","view","setViewType","viewType","showAgenda","isEventPerspective","onSelectDate","date","setDate","eventClicked","event","alert","id","title","ops1","ops2","newEvent","slotId","slotName","start","end","type","item","updateEventStart","newStart","updateEventEnd","newEnd","moveEvent","onSetAddMoreState","newState","undefined","headerItem","left","top","height","Week","dayMaxEvents","weekMaxEvents","monthMaxEvents","quarterMaxEvents","yearMaxEvents","localeMoment","locale","setResources","resources","state","popover","textAlign"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport {PropTypes} from 'prop-types' \r\nimport Scheduler, {SchedulerData, ViewTypes, AddMorePopover, DemoData} from '../src/index'\r\nimport Nav from './Nav'\r\nimport ViewSrcCode from './ViewSrcCode'\r\nimport withDragDropContext from './withDnDContext'\r\n\r\nclass AddMore extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let schedulerData = new SchedulerData('2017-12-18', ViewTypes.Week, false, false, {\r\n            dayMaxEvents: 2,\r\n            weekMaxEvents: 4,\r\n            monthMaxEvents: 4,\r\n            quarterMaxEvents: 4,\r\n            yearMaxEvents: 4,\r\n        });\r\n        schedulerData.localeMoment.locale('en');\r\n        schedulerData.setResources(DemoData.resources);\r\n        schedulerData.setEvents(DemoData.events);\r\n        this.state = {\r\n            viewModel: schedulerData,\r\n            headerItem: undefined,\r\n            left: 0,\r\n            top: 0,\r\n            height: 0,\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {viewModel} = this.state;\r\n\r\n        let popover = <div />;\r\n        if (this.state.headerItem !== undefined) {\r\n            popover =\r\n                <AddMorePopover headerItem={this.state.headerItem} eventItemClick={this.eventClicked}\r\n                                viewEventClick={this.ops1} viewEventText=\"Ops 1\"\r\n                                viewEvent2Click={this.ops2} viewEvent2Text=\"Ops 2\"\r\n                                schedulerData={viewModel}\r\n                                closeAction={this.onSetAddMoreState} left={this.state.left} top={this.state.top}\r\n                                height={this.state.height} moveEvent={this.moveEvent}/>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Nav />\r\n                <div>\r\n                    <h3 style={{textAlign: 'center'}}>Add more<ViewSrcCode srcCodeUrl=\"https://github.com/StephenChou1017/react-big-scheduler/blob/master/example/AddMore.js\" /></h3>\r\n                    <Scheduler schedulerData={viewModel}\r\n                               prevClick={this.prevClick}\r\n                               nextClick={this.nextClick}\r\n                               onSelectDate={this.onSelectDate}\r\n                               onViewChange={this.onViewChange}\r\n                               eventItemClick={this.eventClicked}\r\n                               viewEventClick={this.ops1}\r\n                               viewEventText=\"Ops 1\"\r\n                               viewEvent2Text=\"Ops 2\"\r\n                               viewEvent2Click={this.ops2}\r\n                               updateEventStart={this.updateEventStart}\r\n                               updateEventEnd={this.updateEventEnd}\r\n                               moveEvent={this.moveEvent}\r\n                               newEvent={this.newEvent}\r\n                               onSetAddMoreState={this.onSetAddMoreState}\r\n                    />\r\n                    {popover}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    prevClick = (schedulerData)=> {\r\n        schedulerData.prev();\r\n        schedulerData.setEvents(DemoData.events);\r\n        this.setState({\r\n            viewModel: schedulerData\r\n        })\r\n    }\r\n\r\n    nextClick = (schedulerData)=> {\r\n        schedulerData.next();\r\n        schedulerData.setEvents(DemoData.events);\r\n        this.setState({\r\n            viewModel: schedulerData\r\n        })\r\n    }\r\n\r\n    onViewChange = (schedulerData, view) => {\r\n        schedulerData.setViewType(view.viewType, view.showAgenda, view.isEventPerspective);\r\n        schedulerData.setEvents(DemoData.events);\r\n        this.setState({\r\n            viewModel: schedulerData\r\n        })\r\n    }\r\n\r\n    onSelectDate = (schedulerData, date) => {\r\n        schedulerData.setDate(date);\r\n        schedulerData.setEvents(DemoData.events);\r\n        this.setState({\r\n            viewModel: schedulerData\r\n        })\r\n    }\r\n\r\n    eventClicked = (schedulerData, event) => {\r\n        alert(`You just clicked an event: {id: ${event.id}, title: ${event.title}}`);\r\n    };\r\n\r\n    ops1 = (schedulerData, event) => {\r\n        alert(`You just executed ops1 to event: {id: ${event.id}, title: ${event.title}}`);\r\n    };\r\n\r\n    ops2 = (schedulerData, event) => {\r\n        alert(`You just executed ops2 to event: {id: ${event.id}, title: ${event.title}}`);\r\n    };\r\n\r\n    newEvent = (schedulerData, slotId, slotName, start, end, type, item) => {\r\n        // if(confirm(`Do you want to create a new event? {slotId: ${slotId}, slotName: ${slotName}, start: ${start}, end: ${end}, type: ${type}, item: ${item}}`)){\r\n\r\n        //     let newFreshId = 0;\r\n        //     schedulerData.events.forEach((item) => {\r\n        //         if(item.id >= newFreshId)\r\n        //             newFreshId = item.id + 1;\r\n        //     });\r\n\r\n        //     let newEvent = {\r\n        //         id: newFreshId,\r\n        //         title: 'New event you just created',\r\n        //         start: start,\r\n        //         end: end,\r\n        //         resourceId: slotId,\r\n        //         bgColor: 'purple'\r\n        //     }\r\n        //     schedulerData.addEvent(newEvent);\r\n        //     this.setState({\r\n        //         viewModel: schedulerData\r\n        //     })\r\n        // }\r\n    }\r\n\r\n    updateEventStart = (schedulerData, event, newStart) => {\r\n        // if(confirm(`Do you want to adjust the start of the event? {eventId: ${event.id}, eventTitle: ${event.title}, newStart: ${newStart}}`)) {\r\n        //     schedulerData.updateEventStart(event, newStart);\r\n        // }\r\n        // this.setState({\r\n        //     viewModel: schedulerData\r\n        // })\r\n    }\r\n\r\n    updateEventEnd = (schedulerData, event, newEnd) => {\r\n        // if(confirm(`Do you want to adjust the end of the event? {eventId: ${event.id}, eventTitle: ${event.title}, newEnd: ${newEnd}}`)) {\r\n        //     schedulerData.updateEventEnd(event, newEnd);\r\n        // }\r\n        // this.setState({\r\n        //     viewModel: schedulerData\r\n        // })\r\n    }\r\n\r\n    moveEvent = (schedulerData, event, slotId, slotName, start, end) => {\r\n        // if(confirm(`Do you want to move the event? {eventId: ${event.id}, eventTitle: ${event.title}, newSlotId: ${slotId}, newSlotName: ${slotName}, newStart: ${start}, newEnd: ${end}`)) {\r\n        //     schedulerData.moveEvent(event, slotId, slotName, start, end);\r\n        //     this.setState({\r\n        //         viewModel: schedulerData\r\n        //     })\r\n        // }\r\n    }\r\n\r\n    onSetAddMoreState = (newState) => {\r\n        if (newState === undefined) {\r\n            this.setState({\r\n                headerItem: undefined,\r\n                left: 0,\r\n                top: 0,\r\n                height: 0\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                ...newState,\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default withDragDropContext(AddMore)\r\n"]},"metadata":{},"sourceType":"module"}